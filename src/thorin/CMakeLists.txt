set(THORIN_SOURCES
    axiom.cpp
    axiom.h
    check.cpp
    check.h
    debug.cpp
    debug.h
    def.cpp
    def.h
    error.cpp
    error.h
    lam.cpp
    lam.h
    normalize.cpp
    normalize.h
    rewrite.cpp
    rewrite.h
    stream.cpp
    tuple.cpp
    tuple.h
    union.cpp
    union.h
    tables.h
    world.cpp
    world.h
    analyses/cfg.cpp
    analyses/cfg.h
    analyses/deptree.cpp
    analyses/deptree.h
    analyses/domfrontier.cpp
    analyses/domfrontier.h
    analyses/domtree.cpp
    analyses/domtree.h
    analyses/looptree.cpp
    analyses/looptree.h
    analyses/schedule.cpp
    analyses/schedule.h
    analyses/scope.cpp
    analyses/scope.h
    be/c.cpp
    be/c.h
    pass/optimize.cpp
    pass/optimize.h
    pass/pass.cpp
    pass/pass.h
    pass/fp/eta_conv.cpp
    pass/fp/eta_conv.h
    pass/fp/beta_red.cpp
    pass/fp/beta_red.h
    pass/fp/copy_prop.cpp
    pass/fp/copy_prop.h
    pass/fp/scalarize.cpp
    pass/fp/scalarize.h
    pass/fp/ssa_constr.cpp
    pass/fp/ssa_constr.h
    pass/rw/closure_conv.cpp
    pass/rw/closure_conv.h
    pass/rw/grad_gen.cpp
    pass/rw/grad_gen.h
    pass/rw/partial_eval.cpp
    pass/rw/partial_eval.h
    pass/rw/ptrn_compiler.h
    pass/rw/ptrn_compiler.cpp
    pass/rw/ret_wrap.cpp
    pass/rw/ret_wrap.h
    transform/cleanup_world.cpp
    transform/cleanup_world.h
    transform/flatten_tuples.cpp
    transform/flatten_tuples.h
    transform/mangle.cpp
    transform/mangle.h
    transform/partial_evaluation.cpp
    transform/partial_evaluation.h
    util/args.h
    util/array.h
    util/bitset.cpp
    util/bitset.h
    util/cast.h
    util/hash.h
    util/hash.cpp
    util/indexmap.h
    util/indexset.h
    util/iterator.h
    util/stream.cpp
    util/stream.h
    util/types.h
    util/utility.h
)

if(LLVM_FOUND)
    list(APPEND THORIN_SOURCES
        be/llvm/cpu.cpp
        be/llvm/cpu.h
        be/llvm/cuda.cpp
        be/llvm/cuda.h
        be/llvm/hls.cpp
        be/llvm/hls.h
        be/llvm/llvm.cpp
        be/llvm/llvm.h
        be/llvm/amdgpu.cpp
        be/llvm/amdgpu.h
        be/llvm/nvvm.cpp
        be/llvm/nvvm.h
        be/llvm/opencl.cpp
        be/llvm/opencl.h
        be/llvm/parallel.cpp
        be/llvm/runtime.inc
        be/llvm/runtime.cpp
        be/llvm/runtime.h
        be/llvm/vectorize.cpp
    )
endif()

add_library(thorin ${THORIN_SOURCES})

if(LLVM_FOUND)
    llvm_map_components_to_libnames(LLVM_LIBRARIES all)
    target_link_libraries(thorin ${LLVM_LIBRARIES})
endif()
if(RV_FOUND)
    target_link_libraries(thorin ${RV_LIBRARIES})
endif()
